"use strict";(self.webpackChunk_encryptr_docs=self.webpackChunk_encryptr_docs||[]).push([[596],{1661:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(7896),i=n(1461),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:4},s="Zenit",p={unversionedId:"tutorial-basics/ZenitPolar",id:"tutorial-basics/ZenitPolar",title:"Zenit",description:"Another letter substitution library that only substitues the letters from the words ZENIT and POLAR",source:"@site/docs/tutorial-basics/ZenitPolar.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/ZenitPolar",permalink:"/Encryptr/docs/docs/tutorial-basics/ZenitPolar",draft:!1,editUrl:"https://github.com/VitorGouveia/Encryptr/blob/main/packages/docs/docs/tutorial-basics/ZenitPolar.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"ROT",permalink:"/Encryptr/docs/docs/tutorial-basics/ROT"},next:{title:"Tutorial - Extras",permalink:"/Encryptr/docs/docs/category/tutorial---extras"}},u={},c=[{value:"Versioning",id:"versioning",level:2},{value:"Usage",id:"usage",level:2},{value:"Zenit",id:"zenit-1",level:3},{value:"DefaultZenitPolar",id:"defaultzenitpolar",level:3},{value:"Internal Workings",id:"internal-workings",level:2},{value:"New Zenit",id:"new-zenit",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"zenit"},"Zenit"),(0,a.kt)("p",null,"Another letter substitution library that only substitues the letters from the words ",(0,a.kt)("inlineCode",{parentName:"p"},"ZENIT")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"POLAR")),(0,a.kt)("h2",{id:"versioning"},"Versioning"),(0,a.kt)("p",null,"As of today, there are two versions of zenit, ",(0,a.kt)("inlineCode",{parentName:"p"},"Zenit")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultZenitPolar"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultZenitPolar")," is the default zenit polar implementation according to ",(0,a.kt)("a",{parentName:"p",href:"https://pt.wikipedia.org/wiki/Zenit_Polar"},"wikipedia"),", the new version, ",(0,a.kt)("inlineCode",{parentName:"p"},"Zenit"),", accepts multiple keys as a parameter and can be way more useful than the normal zenit polar implementation."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"zenit-1"},"Zenit"),(0,a.kt)("p",null,"The usage is simple, import the ",(0,a.kt)("inlineCode",{parentName:"p"},"Zenit")," class from the ",(0,a.kt)("inlineCode",{parentName:"p"},"core")," package and instantiate it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Zenit } from "@encryptr/core"\n\nconst zenit = new Zenit()\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Zenit")," class has just one prop, which is optional and is by default ",'["zenit", "polar"]',', the keys that will "encrypt" your string, making it not only a ',(0,a.kt)("inlineCode",{parentName:"p"},"PolarZenit")," method but a ",(0,a.kt)("inlineCode",{parentName:"p"},"PolarZenitAndEverythingYouWantItToBe")," method, and you can do it like so."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Zenit } from "@encryptr/core"\n\nconst zenit = new Zenit({\n  keys: ["polar", "zenit", "homer", "chris"]\n})\n')),(0,a.kt)("h3",{id:"defaultzenitpolar"},"DefaultZenitPolar"),(0,a.kt)("p",null,"The usage is simple, import the ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultZenitPolar")," class from the ",(0,a.kt)("inlineCode",{parentName:"p"},"core")," package and instantiate it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { DefaultZenitPolar } from "@encryptr/core"\n\nconst defaultZenitPolar = new DefaultZenitPolar()\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"DefaultZenitPolar")," class has no props, using make of the default zenit polar algorithm."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { DefaultZenitPolar } from "@encryptr/core"\n\nconst defaultZenitPolar = new DefaultZenitPolar()\n')),(0,a.kt)("h2",{id:"internal-workings"},"Internal Workings"),(0,a.kt)("p",null,"The way Zenit polar works is by substituting it's owns letters positions, just like this:\n","[Z  E  N  I  T]"," ",(0,a.kt)("br",null),"\n","[P  O  L  A  R]"," ",(0,a.kt)("br",null)),(0,a.kt)("p",null,'this is how the letter "E" would look like'),(0,a.kt)("p",null,"E -> H"),(0,a.kt)("p",null,'so if the string has a "z" letter, it would be replaced by "p" and so on for the next letters'),(0,a.kt)("h3",{id:"new-zenit"},"New Zenit"),(0,a.kt)("p",null,"in the new version of Zenit, because the chain is much bigger, the letter keep being substituted after each key, working like so"),(0,a.kt)("p",null,"[Z  E  N  I  T]"," ",(0,a.kt)("br",null),"\n","[P  O  L  A  R]"," ",(0,a.kt)("br",null),"\n","[H  O  M  E  R]"," ",(0,a.kt)("br",null),"\n","[C  H  R  I  S]"," ",(0,a.kt)("br",null)),(0,a.kt)("p",null,'this is how the letter "E" would look like'),(0,a.kt)("p",null,"E -> O -> O -> H"))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);